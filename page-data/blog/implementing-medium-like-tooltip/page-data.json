{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/implementing-medium-like-tooltip/","webpackCompilationHash":"8eb1eef152d1ee0ad370","result":{"data":{"post":{"frontmatter":{"title":"Implementing medium like tooltip","date":"2019-01-20T21:52:08.746Z","tags":["reactjs","render-props","web-api"]},"html":"<p>It might (and should) look like quite a trivial thing to implement. But still there are some pitfalls, so I want to tell how to avoid them, what libraries and patterns can help. And again to strengthen my English üòÅ</p>\n<h2>Positioning is not easy</h2>\n<p>Here is a list of problems commonly faced when dealing with popups:</p>\n<ul>\n<li>how to position element relative to some other one </li>\n<li>how to position element over everything else aka <em>z-index: 999;</em> </li>\n<li>take into account viewport borders </li>\n<li>handle scrolling </li>\n</ul>\n<p>Fortunately we live in open source era, so there is plenty of ready solutions. E.g. <a href=\"https://github.com/FezVrasta/react-popper\">react-popper</a> - library that takes care about all positioning issues. I've already used it in my previous projects and was satisfied. So I'll use it here as well.</p>\n<p>Let's try to create simple popup using it:</p>\n<p>\n          <div\n            class=\"gatsby-resp-iframe-wrapper\"\n            style=\"padding-bottom: 50%; position: relative; height: 0; overflow: hidden;\"\n          >\n            <iframe data-src=\"https://codesandbox.io/api/v1/sandboxes/define?embed=1&amp;parameters=N4IgZglgNgpgziAXKCA7AJjAHgOgFYLIgDGA9qgC4yVIgQC2ADqQE4UAEASjAIbEdgWpeuwA6IFr37iA3KNQNmbLlIoARAPIBZdoOFiJqgLTphs-fMWsOwdlp6oeAcxgsANCrCvqxGB4AKpIyMruwAvrpCIuKSfBRGzMGu5qjysBwUpKRQFBCMAMoUAJ6w7AC87MDy7OwARnwA1k5CAK4YiAYAxGA94m7VdayYLB3iAIyMWOxw2RDo7M0w1H0DjDzo6GhOHWMADP2oNfQ8LE5oO7vyYXKpqOnsAILB5ewAFACU5QB8bwMAPJsAG5fAY1P72RwuFggw41OF_bheSSoXwwuHoyqvWySMDhT5lH6vUEYsFoRgtDg4srAHERYohMriKhYCjidiMKB8GAAC2yw0ZIAAkqhyRwAO4QCjc9iZbK5Rg4RVsgD0aJJ7HeYWJYOViO8KJgMO17D-gSSLHZnN89GoFAFtVIFEy9HEapJwCx7BxHjgxVgHg5XJtlA8JyEYv8QkYcDx31-sPVJqBXpgYGptOmfpg1NsipwvpKfnYedlOTyhUL4TCbsT7EAvBuANN3ud52JLW3Bjei_sqgTX0Zrjd2zSFocTuxDnK4jQmTYwvgAVbkQGPMjhwXktKDzWowdikQGuTkhbdFGVZMsK7tz_49iDA-TvG7yMioX1erIUACisGDHAqpmIFpfxwFwvx_W0ACEikFdAiQkD9xEfeRuDiTQtBwZFhleP4nkYdhVQ8IRHW_GBfyQ1AQDCNwQDWYgGknfAZgoogXyoGgiEcG1aESEcQGozAQgwHwIHgJBQFifhaAAPTGAA2HAAE4cF2PjDDiExhGkuTFOU1SJPiHjXC0nAAGZTMosJLLCIA&amp;query=hidenavigation%3D1%26view%3Dpreview\" class=\"embedded-codesandbox\" style=\"border: none;\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n          \" sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\">\n                 </iframe>\n          </div>\n          </p>\n<p>By the way, its api should be more neat <a href=\"https://github.com/FezVrasta/react-popper/issues/241\">with hooks</a>.</p>\n<p>As you can see, <em>react-popper</em> solved all problems I've mentioned above:</p>\n<ul>\n<li>calculated position of popup relative to input </li>\n<li>positioned it using _translate3d _(you can also use position fixed or even <a href=\"https://reactjs.org/docs/portals.html\">portals</a> in case you are using overflow...) </li>\n<li>took into account viewport and handles scrolling </li>\n</ul>\n<h2>Let's make it bit more complex</h2>\n<p>To tell the truth, it is not the end of our positioning journey: the tooltip should appear next to the selected text, not its DOM node (cause it might be huge paragraph).</p>\n<p>Any ideas how we can accomplish that? A couple of questions to google and boom - browser has a <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Selection\">selection api</a>. With its help we can get access to parts of text nodes - <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Range\">Ranges</a>.</p>\n<p>Let's look at how we can apply this api:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">let</span> <span class=\"token function-variable function\">handleMouseUp</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> selection <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">getSelection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// we do not need \"empty\" selection</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>selection<span class=\"token punctuation\">.</span>isCollapsed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> range <span class=\"token operator\">=</span> selection<span class=\"token punctuation\">.</span><span class=\"token function\">getRangeAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// now we know where to render tooltip</span>\n    range<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Here is a demo:</p>\n<p>\n          <div\n            class=\"gatsby-resp-iframe-wrapper\"\n            style=\"padding-bottom: 50%; position: relative; height: 0; overflow: hidden;\"\n          >\n            <iframe data-src=\"https://codesandbox.io/api/v1/sandboxes/define?embed=1&amp;parameters=N4IgZglgNgpgziAXKCA7AJjAHgOgFYLIgDGA9qgC4yVIgQC2ADqQE4UAEASjAIbEUAadsHYBXODADKFHlXYBfdmBal67AOQte_dQB1UDZmy7aKAEQDyAWSUq1m0wFp0qvan2wOAQUaN2AXnYACgBKAIA-YX12dk92AG0RClJGIVgwQXYAdwh0CgALIXyYCABzfI55IQkKbn4AXQCxCWlZGCDgeRD9aNiYDnyeDFgrUnEYAFU_QNCIqNQYmLiJWH4IciacjFIsnFL-yRhVinXUUJ6FxYgwYIBCFZg18hwIOABhUigoHkYJdDDgL1Fn0OCwhvsmg8nqg9v1OOCYF4KEEAAzdS7Amp1ZFg1D7WEUABCYwwaFKbygEGotUeyJC6OB8l6TPcly0FFELAWQSB7AAPOgIAA3djEb5wOAAOR49Bg_l0IB8jAV4V5MT5-QAjKqMcD-Tx2PktGB5SAKhRfogAPRWzBCo4pGAsHD0UgAL2g3xwrFKVuojgmkltpGIcCtAHUYAAjK1eAAKAEkrYdjqcVWq9SnaWndcC-VaeOFgOoNCy9Yshuhi6WM-qDUaYCaFebLTa7Q7GE6Xe7PTxvSxff7A8HQxHo7HE1b4XiYOnc3rp_ta_yC0WS-oy-X2D8IBn81qdXv8gAmcJZ_jsOCqGDsKhYCj708Xct8vzkUbjKb-YCDYYwD8SFM8g6lu7AADKsDAagQL8ohqC4UCsNUEAcDK_SiuQEj8P0nLboKjCvBAxBkuwRwoTg4E8KI6BDCccHLjAcFCIKcAnKgTykfaBjoShPAAI6iDexBwQJQmsCwoiMCcpGUvspLsAJPA3opcAQKRPASfQy6KU6shCKg8DEaIlCXp8ogyNuFCiewqgGHApGkHAQhGCo7AQJyN70DwpQGHhblfKQtx7lajCHvOArCsurEAJ6wN-gLzsCzCqSc5CIBoPBRleUDmTA6gCMuMRRqwmAsOl6jHowWDsDRcDFOg7ClFo1D5YVt4pAViWLOkghtTkeSFG1xRlBUy7yJuwJWiBiz5oKQrTeiLL6GQqCsewKikBQACisCyiZgQuMJe0UASO1QdShLRQm6BBJopCbeo6LcHw5jWDgWgYE6QR8kq7BTUIG3bbt1LoiAVQgIwfAANbeTA-BXqgSCgCtVA0EQqBobQzC-E6IACCAmCdp97FUoQoBaC9tAAHqagAbDgACcOAonjIAU_wziqNTdOM8zYPjeNQA&amp;query=hidenavigation%3D1%26view%3Dpreview\" class=\"embedded-codesandbox\" style=\"border: none;\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n          \" sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\">\n                 </iframe>\n          </div>\n          </p>\n<p>Well looks cool, but how can we attach that to <em>react-popper</em>? It expects to get a ref to DOM node...</p>\n<p>Its documentation has an answer - <a href=\"https://github.com/FezVrasta/react-popper#usage-without-a-reference-htmlelement\">we should create \"virtual\" DOM node</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// we are implementing methods required for react-popper</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">VirtualSelectionReference</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">selection</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>selection <span class=\"token operator\">=</span> selection\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>selection<span class=\"token punctuation\">.</span><span class=\"token function\">getRangeAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">get</span> <span class=\"token function\">clientWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">get</span> <span class=\"token function\">clientHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>height\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>It's time to bring everything together:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">let</span> <span class=\"token function-variable function\">SelectionReference</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> onSelect<span class=\"token punctuation\">,</span> children <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Reference</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> ref <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n      <span class=\"token comment\">// 1. more handy api</span>\n      <span class=\"token function\">children</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">getProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> onMouseUp<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">...</span>rest<span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">onMouseUp</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">let</span> selection <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">getSelection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>selection<span class=\"token punctuation\">.</span>isCollapsed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// 2. feed it to react-popper</span>\n            <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">VirtualSelectionReference</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\">// 3. handy method</span>\n            onSelect <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">onSelect</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span>\n\n          <span class=\"token comment\">// 1. user of our component might want to use this event too</span>\n          onMouseUp <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">onMouseUp</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Reference</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Let's review the solution step by step:</p>\n<ol>\n<li>We've created special  <em>SelectionReference</em> component by wrapping original one.\nIt has same signature with one exception: children function (aka <a href=\"https://cdb.reacttraining.com/use-a-render-prop-50de598f11ce\">render prop</a>) will receive function instead of object - it is known as <a href=\"https://blog.kentcdodds.com/how-to-give-rendering-control-to-users-with-prop-getters-549eaef76acf\">get props pattern</a>. The main benefit of it here is that our component taking care of merging its own props (<em>onMouseUp</em> handler) with props we might want to provide when outside. </li>\n<li>We've fed our \"fake\" DOM node to original <em>Reference _component</em>._ </li>\n<li>We've created handy <em>onSelect</em> event, which we'll use later. </li>\n</ol>\n<p>That's it! now we can use our component to position tooltip:</p>\n<p>\n          <div\n            class=\"gatsby-resp-iframe-wrapper\"\n            style=\"padding-bottom: 50%; position: relative; height: 0; overflow: hidden;\"\n          >\n            <iframe data-src=\"https://codesandbox.io/api/v1/sandboxes/define?embed=1&amp;parameters=N4IgZglgNgpgziAXKCA7AJjAHgOgFYLIgDGA9qgC4yVIgQC2ADqQE4UAEASjAIbEUAadsHYBXODADKFHlXYBfdmBal67AOQte_dQB1UDZmy7aKAEQDyAWSUq1m0wFp0qvQaasOIqz1Q8A5jAsQgAKpIyMQQq2qhpafBSOzBFBbvqGnuySMLD8EOTcYEHUxDAx9jgA9BK5FPmojlpFWqilaaiwHBSkpFB1jNIAnrDsALzC-uzsAEZ8ANb-KqIYiBoAxGCb6gKTM6yYLKvqAIyMWOxwvRDo7Isw1Nu7jDzo6Gj-q8cADDuoU_Q8Fj-NCfL76eT6fSddgAQQiY3YAAoAJRjAB8Ez-7GhAG0ajB-DB0AAVbCCC4wCjZWpE0lYCgAXQR4ikMioiPU6mRkKxWgoohYf0RuymAB43gA3NEiqbsUUAC2OaKsRIgokY2IgczKyXVosqiulqBlYvlACY0dSCRxLvQylR6frzUaTXKfH5AiwjbKfXKrXkCjBmiUYK6feR_RRRsB8QG_qMMRIqTlrbSyYjY3VyDhutIWO8UciIVjfexvaXZcBAhQQipGHB0Uiw77RYxm6XgDgu9Xa-E4IjgO2K-QrKQWQBVRirFGNsioS6wHBQUj-DkAdTKcDqUCg7GIvjEEnYFHlEAb-53s2IcwAhFyhz75EWH2WX1MADKsGBqCD10RqFxlxYC4IA4Hg7Q4OcJEJflgJeX8zwgYh3nYHJQJwdhRx3UCIB4N92FPYh2B4SJ83A4i4Dgf9qHQHh2ABfItAbVB_wAR1EcCMO4SIdxo8QhB4UQKHw0jgwwM9ULVOAhABfw_DUOA0A4LRGC0eUaKCUD2AlXp1TZGBfgrCsoJgdjllgvdyGgqgLLIFgWD0iB2DeLc0ADdhGCgPheAoDCzF6L9pPw1QDAbQibxffVGHLIznxLFtKkjepCmKVoYBdeKfVFMIUmAzzvLtShRl0EBplIChunoEqYorYAB3YJohC3YYDI8rzSkK8lARUAB3Xt6wUVEEybTKK3FCAJQaoNoyaRRmtgaMRC7HB5ta5bul6fohhGeR5Bqoypl4OBBnYQBeDcACT38NbfaDqmTMiWPMlVlFaY0RjFNCRJMl5H1V6rsqaLIsqSUbp9OKjP1HLSJu_V3QCIIav1EHdm5VBi30KDlJ6CgAFFYE6hEXGIajKBwas8e_agKAAIUGABJdAORUcr71QbgEksKwcBaA5EVFOENUqNEhGZ3H8ap1GQHkAQQEzepGiDVLSnwQhQDnKgaEQOgPGMdn-HKOJTDcDJjBEFKWlKaJlFiBwEiScJSPaSpKgIir60QZ3gRPURphwMh6EqAAxGAAC8ADUWB4LceEqeJ-Ht3K1nEeHHB60D5THRIeAVsTSkceUKHoWBxcoDGvMo9gw4gNgOKgJLA1zspByxTGHP4VgMw-rNUFRZufRPM8Vq7-oETl8hdnRrFq2psdxNQfwAGEoAgKnuH4Gc-9lPkBT-Ae4CH2p6jJylOF8QIYQoREvmRY-adnt556XlfKDXy_UamSepmrPdl6ptdrhPBvGU29BTHlPPvae993hP1XtaFEOA07oBPBPHkX9KQ_2fhQAAEjACA_gC5APiiA3e4Db4z2WA_Rev8X5wJvupPBBcUFox5NCeubNFYWzKOMeqEYu5CGIKeKA6AWiDUbMKLEopzYhhqnVEQTRREJldAI6AwjqCIh4agUcE5GBCGWkxDgihxjACfGIzepY9HwEEM2EcY4JCTmnMtQE_g4BDQxGYis0Ix7xnYGnDApAeq3zYSiVBB0IBgCRDeLxOAzwL16F5esRJe4viaIiVAMAeqV2rvyHgddh4NyVjATuh9yDInfrddgvDajsAAGTVIqagSMRTrT1F0V2JxLihyfwOjY7RNS6k9LsYwREjigQdNGh_QyvonxlI_rsfUUi0pGlRvobARgOCYDAIJPoWQ8nsMbvoKWMtnjXnhircgSA1bkA1hQC5IB5IwFoMkUiIAZaYEiBgEoK9VYgDjjcrWAA9Y4AA2HAABOHAXwXk_KcC4egtBAUgvBZCmWvyE7PIBccHAABmbFUtdq7SAA&amp;query=hidenavigation%3D1%26view%3Dpreview\" class=\"embedded-codesandbox\" style=\"border: none;\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n          \" sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\">\n                 </iframe>\n          </div>\n          </p>\n<h2>Cherry on top</h2>\n<p>This guide would be incomplete if we won't animate appearance of tooltip. And again I will use proven solution - <a href=\"https://github.com/react-spring/react-spring\">react-spring</a>.</p>\n<p>All we need is to wrap our tooltip into <em>Transition</em> (it animates component lifecycles). So we'll get composition of 2 <em>render prop</em> components:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// our component should be totally reusable so</span>\n<span class=\"token comment\">// 1. we manage its state (isOpen) outside</span>\n<span class=\"token comment\">// 2. we receive content (children) from outside as well</span>\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">Tooltip</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> isOpen<span class=\"token punctuation\">,</span> children <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Popper</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* Popper provides styles for positioning */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> ref<span class=\"token punctuation\">,</span> style <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Transition</span></span>\n        <span class=\"token attr-name\">items</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>isOpen<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">from</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> transform<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">translateY(30px) scale(0.9)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> opacity<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">enter</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> transform<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">translateY(0) scale(1)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> opacity<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">leave</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> transform<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">translateY(30px) scale(0.9)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> opacity<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* we should use flag provided by Transition to make animation work */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span><span class=\"token parameter\">transitionIsOpen</span> <span class=\"token operator\">=></span>\n          transitionIsOpen <span class=\"token operator\">&amp;&amp;</span>\n          <span class=\"token punctuation\">(</span><span class=\"token parameter\">transitionStyle</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n            <span class=\"token comment\">// and here is styles provided by react-spring to animate appearance</span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ref<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>style<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n              </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SomeStyledTooltip</span></span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>transitionStyle<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">SomeStyledTooltip</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Transition</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Popper</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>It is a bit simplified code, full version of it you can find <a href=\"https://github.com/kitos/kitos.github.io/blob/develop/src/components/tooltip/tooltip.js\">here</a>. And, by the way, you can see the demo by selecting any text in this (any any other) blog post üòè.</p>\n<p>That is all I wanted to share for now. I hope you found this article useful.</p>"},"similarPosts":{"edges":[{"node":{"frontmatter":{"slug":"dynamics-in-a-static-site","title":"Dynamics in a static site","date":"2019-01-28T22:38:57.492Z","tags":["cloud-functions","gcp","github-api","reach-ui","reactjs","CORS","JAMStack"]},"timeToRead":4}},{"node":{"frontmatter":{"slug":"load-everything-lazily-with-intersectionobserver","title":"Load everything lazily with IntersectionObserver","date":"2019-01-23T21:52:08.746Z","tags":["reactjs","react-hooks","web-api"]},"timeToRead":1}},{"node":{"frontmatter":{"slug":"the-simplest-example-of-scheduling-on-the-main-thread","title":"The simplest example of scheduling on the main thread","date":"2019-02-19T22:42:04.602Z","tags":["web-api","algorithms","reactjs"]},"timeToRead":4}}]},"site":{"meta":{"siteUrl":"https://www.nikitakirsanov.com"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"cc4f020a-6e32-59da-96f9-20e358676ac0","similarPosts":["dae1d080-147c-533f-86c6-0dd09a4e3b81","e7cf91c9-ffaa-57c9-8425-241aba5424c2","2c5e8ce3-f665-5c2a-b195-32e5596693e7"]}}}